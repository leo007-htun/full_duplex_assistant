  deploy:
    needs: build_push
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script_stop: true
          script: |
            set -euo pipefail

            # prepare directory & repo
            mkdir -p "${{ secrets.SERVER_PATH }}"
            if [ ! -d "${{ secrets.SERVER_PATH }}/.git" ]; then
              git clone https://github.com/${{ github.repository }} "${{ secrets.SERVER_PATH }}"
            fi

            cd "${{ secrets.SERVER_PATH }}"
            git fetch --all --prune
            git reset --hard origin/main

            # write app env (server only, NOT committed)
            mkdir -p src/assistant
            cat > src/assistant/.env << 'EOF'
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
            ALLOWED_ORIGINS=https://com-cloud.cloud
            ENABLE_VOICE=0
            EOF

            # write root .env with ACME email + IMAGE_TAG to pin
            cat > .env << 'EOF'
            LE_EMAIL=${{ secrets.LE_EMAIL }}
            IMAGE_TAG=${{ needs.build_push.outputs.tag }}
            EOF

            # ensure static site exists (fix path if needed)
            if [ ! -f ./web/index.html ]; then
              echo "WARNING: full_duplex_assistant_v1/web/index.html missing. Check compose volume path."
              ls -la full_duplex_assistant_v1 || true
            fi

            echo ">>> Cleaning up old containers and images (keeping volumes for certs)..."
            docker stop $(docker ps -aq) || true
            docker rm -f $(docker ps -aq) || true
            docker image prune -af || true

            echo ">>> Pulling new images and deploying..."
            docker-compose pull
            docker-compose up -d --remove-orphans

            echo ">>> Waiting for Traefik to bind on 443..."
            for i in {1..60}; do
              if docker exec full_duplex_traefik_1 sh -lc 'ss -tlpn | grep -q ":443 "'; then
                break
              fi
              sleep 2
            done

            echo ">>> Local HTTPS test via loopback + Host header..."
            for i in {1..60}; do
              if curl -fsSIk https://127.0.0.1 -H "Host: com-cloud.cloud" >/dev/null 2>&1; then
                break
              fi
              sleep 2
            done

            echo ">>> Public HTTPS smoke test..."
            for i in {1..60}; do
              curl -fsS "https://com-cloud.cloud/" >/dev/null && break
              sleep 5
            done

            echo "Deployed image tag: ${IMAGE_TAG}"
