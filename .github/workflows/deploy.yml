name: Build, Push & Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_push:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.vars.outputs.sha_short }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Short SHA
        id: vars
        run: echo "sha_short=${GITHUB_SHA::7}" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push (amd64)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./src/assistant/utils/Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            sithuyehtun/full_duplex_assistant:latest
            sithuyehtun/full_duplex_assistant:${{ steps.vars.outputs.sha_short }}
  deploy:
    needs: build_push
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          port: 22
          debug: true
          command_timeout: 40m
          script_stop: true
          script: |
            set -euo pipefail
      
            echo "== connected =="
            whoami || true
            uname -a || true
            date
      
            # ==== Compose detection (NO unguarded calls) ====
            if docker compose version >/dev/null 2>&1; then
              COMPOSE="docker compose"
            elif command -v docker-compose >/dev/null 2>&1; then
              COMPOSE="docker-compose"
            else
              echo "❌ Neither 'docker compose' nor 'docker-compose' is installed."; exit 1
            fi
            echo "Using COMPOSE=$COMPOSE"
            $COMPOSE version || true
      
            REPO_PATH="${{ secrets.SERVER_PATH }}"
            echo "REPO_PATH=$REPO_PATH"
      
            echo "== prepare repo =="
            mkdir -p "$REPO_PATH"
            if [ ! -d "$REPO_PATH/.git" ]; then
              git clone https://github.com/${{ github.repository }} "$REPO_PATH"
            fi
            cd "$REPO_PATH"
            git fetch --all --prune
            git reset --hard origin/main
      
            echo "== detect compose file =="
            COMPOSE_FILE=""
            for f in docker-compose.yml docker-compose.yaml compose.yml compose.yaml; do
              if [ -f "$f" ]; then COMPOSE_FILE="$f"; break; fi
            done
            if [ -z "$COMPOSE_FILE" ]; then
              echo "❌ No compose file found in $(pwd)"; ls -la; exit 1
            fi
            echo "Using compose file: $COMPOSE_FILE"
            $COMPOSE -f "$COMPOSE_FILE" config >/dev/null
      
            echo "== write env files =="
            mkdir -p src/assistant
            printf 'OPENAI_API_KEY=%s\nALLOWED_ORIGINS=%s\nENABLE_VOICE=0\n' \
              "${{ secrets.OPENAI_API_KEY }}" "https://com-cloud.cloud" \
              > src/assistant/.env
      
            printf 'LE_EMAIL=%s\nIMAGE_TAG=%s\n' \
              "${{ secrets.LE_EMAIL }}" "${{ needs.build_push.outputs.tag }}" \
              > .env
      
            echo "== ensure ACME store (bind mount ./letsencrypt) =="
            mkdir -p ./letsencrypt
            [ -f ./letsencrypt/acme.json ] || : > ./letsencrypt/acme.json
            chmod 600 ./letsencrypt/acme.json || true
            ls -l ./letsencrypt || true
      
            echo "== stop project only =="
            $COMPOSE -f "$COMPOSE_FILE" down --remove-orphans || true
      
            echo "== prune unused =="
            docker image prune -af || true
            docker builder prune -af || true
      
            echo "== pull & up =="
            $COMPOSE -f "$COMPOSE_FILE" pull
            $COMPOSE -f "$COMPOSE_FILE" up -d --remove-orphans
      
            echo "== ps =="
            $COMPOSE -f "$COMPOSE_FILE" ps || true
      
            echo "== local https check =="
            for i in {1..30}; do
              if curl -fsSIk https://127.0.0.1 -H "Host: com-cloud.cloud" >/dev/null 2>&1; then
                echo "Local HTTPS OK"; break
              fi
              sleep 2
              if [ $i -eq 30 ]; then echo "Local HTTPS FAILED"; exit 1; fi
            done
      
            echo "== public https check =="
            for i in {1..30}; do
              if curl -fsSIk https://com-cloud.cloud/ >/dev/null 2>&1; then
                echo "Public HTTPS OK"; break
              fi
              sleep 5
              if [ $i -eq 30 ]; then echo "Public HTTPS FAILED"; exit 1; fi
            done
      
            echo "Deployed tag: ${{ needs.build_push.outputs.tag }}"
