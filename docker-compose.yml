version: "3.9"

services:
  init_letsencrypt:
    image: alpine:3.20
    command: sh -c "mkdir -p /letsencrypt && touch /letsencrypt/acme.json && chmod 600 /letsencrypt/acme.json"
    volumes:
      - ./letsencrypt:/letsencrypt
    restart: "no"

  traefik:
    image: traefik:v3.0
    depends_on:
      init_letsencrypt:
        condition: service_completed_successfully
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entryPoints.websecure.transport.respondingTimeouts.idleTimeout=0
      - --serversTransport.forwardingTimeouts.idleConnTimeout=0
      - --certificatesresolvers.letsencrypt.acme.email=${LE_EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks: [web]
    restart: unless-stopped

  web:
    image: nginx:alpine
    volumes:
      - ./web:/usr/share/nginx/html:ro
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      # Handle everything except /api and /ws
      - "traefik.http.routers.web.rule=Host(`com-cloud.cloud`) && !PathPrefix(`/api`) && !PathPrefix(`/ws`)"
      - "traefik.http.routers.web.entrypoints=websecure"
      - "traefik.http.routers.web.tls.certresolver=letsencrypt"
      - "traefik.http.routers.web.priority=1"
      - "traefik.http.services.web.loadbalancer.server.port=80"
    networks: [web]
    restart: unless-stopped

  assistant:
    image: sithuyehtun/full_duplex_assistant:${IMAGE_TAG:-latest}
    command: >
      uvicorn assistant.app:app
      --host 0.0.0.0
      --port 8000
      --proxy-headers
      --forwarded-allow-ips=*
    env_file:
      - ./src/assistant/.env
    environment:
      - ENABLE_VOICE=0
      - ALLOWED_ORIGINS=https://com-cloud.cloud
      - OPENAI_REALTIME_MODEL=gpt-realtime
    expose:
      - "8000"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      # Route /api/* to assistant
      - "traefik.http.routers.assistant.rule=Host(`com-cloud.cloud`) && (Path(`/api`) || PathPrefix(`/api/`))"
      - "traefik.http.routers.assistant.entrypoints=websecure"
      - "traefik.http.routers.assistant.tls.certresolver=letsencrypt"
      - "traefik.http.routers.assistant.priority=100"
      - "traefik.http.services.assistant.loadbalancer.server.port=8000"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:8000/healthz || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
    networks: [web]
    restart: unless-stopped

networks:
  web:
    driver: bridge
