version: "3.9"

services:
  init_letsencrypt:
    image: alpine:3.20
    command: sh -c "mkdir -p /letsencrypt && touch /letsencrypt/acme.json && chmod 600 /letsencrypt/acme.json"
    volumes: [ "./letsencrypt:/letsencrypt" ]
    restart: "no"

  traefik:
    image: traefik:v3.0
    depends_on:
      init_letsencrypt:
        condition: service_completed_successfully
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=full_duplex_web
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --certificatesresolvers.letsencrypt.acme.email=${LE_EMAIL}
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
      - --certificatesresolvers.letsencrypt.acme.tlschallenge=true
      - --log.level=DEBUG
      - --accesslog=true
      - --api.dashboard=true
      - --api.insecure=true
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks: [ web ]
    restart: unless-stopped

  web:
    image: nginx:alpine
    volumes:
      - "./web:/usr/share/nginx/html:ro"
    labels:
      - traefik.enable=true
      - traefik.docker.network=full_duplex_web
      - traefik.http.routers.web.rule=Host(`com-cloud.cloud`) && !PathPrefix(`/api`) && !PathPrefix(`/ws`)
      - traefik.http.routers.web.entrypoints=websecure
      - traefik.http.routers.web.tls.certresolver=letsencrypt
      - traefik.http.routers.web.priority=1
      - traefik.http.services.web.loadbalancer.server.port=80
    networks: [ web ]
    restart: unless-stopped

  assistant:
    build:
      context: .
      dockerfile: src/assistant/utils/Dockerfile
    container_name: full_duplex_assistant_1
    working_dir: /app
    volumes:
      - ./src:/app             # your code lives at /app/assistant/...
    env_file:
      - ./src/assistant/.env
    environment:
      - ENABLE_VOICE=0
      - ALLOWED_ORIGINS=https://com-cloud.cloud
    expose:
      - "8000"
    labels:
      - traefik.enable=true
      - traefik.docker.network=full_duplex_web
      - traefik.http.routers.assistant.rule=Host(`com-cloud.cloud`) && PathPrefix(`/api`)
      - traefik.http.routers.assistant.entrypoints=websecure
      - traefik.http.routers.assistant.tls.certresolver=letsencrypt
      - traefik.http.routers.assistant.priority=100
      - traefik.http.services.assistant.loadbalancer.server.port=8000
    networks: [ web ]
    restart: unless-stopped
    # ✅ robust healthcheck that doesn’t require curl
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "python - <<'PY'\nimport sys,urllib.request\n"\
          "url='http://127.0.0.1:8000/openapi.json'\n"\
          "try:\n  sys.exit(0 if urllib.request.urlopen(url,timeout=3).status==200 else 1)\n"\
          "except Exception:\n  sys.exit(1)\nPY"
        ]
      interval: 20s
      timeout: 5s
      start_period: 25s
      retries: 3

networks:
  web:
    driver: bridge
    name: full_duplex_web
